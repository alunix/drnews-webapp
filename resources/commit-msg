#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}

echo "Checking for correct Issue Reference Number"

COMMIT_REF_NUM=$(sed -ne 's/.*\#\([0-9]*\).*/\1/p' $1)

echo Parsed Commit Ref Num: $COMMIT_REF_NUM

RESULT=$((curl -s -u "dtaveras:lucas1223" -i https://api.github.com/repos/dtaveras/angular2-experiment/issues)|grep number | sed -e "s/\(\"number\":\) \([0-9]*\).*/\2/"|sed -ne "s/$COMMIT_REF_NUM/EXIST/p")

if [ $RESULT ]; then
   echo "Ticket exists proceeding to commit"
else
    echo "Ticket does not EXIST please create one or commit against a different ticket"
    exit 1
fi

exit 1
